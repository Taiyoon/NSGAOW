\chapter{相关理论}\label{chapter:theories}

\section{多目标优化算法}

（我们首先介绍什么是优化问题）（解释什么是多(multi objective)目标优化。
现实问题通常具有许多相互冲突的目标，比如寻找最高性价比的产品，因此需要将冲突的目标建模为多目标优化问题。本节简要介绍了基于进化的NSGA系列算法系列算法。
多目标优化理论
对于多目标优化问题，绝对最优解意味着所有目标的所有解都是最优的。在大多数情况下，它们不存在。因此，需要引入 Pareto 支配和 Pareto 最优解。
假设 U 和 V 是向量，即
和
，如果对于任何
、U我≤V我和
、Uj < Vj，那么我们说向量 U 支配 V，它表示为 U ≺ V。假设在可行区域 X 中f，对于解决方案 x，如果没有
，则向量 （f1(x）、f2(x）， ...， fk(x）） ≺
，则 x 在可行区域 x 中称为帕累托最优解 f。 帕累托支配和帕累托最优解的详细数学描述可以参考 [21]。

（介绍解决多目标优化问题的主要方法：以及精确算法，元启发式算法，，但是实际问题很难精确算法优化）
元启发式算法是计算智能范式，特别用于复杂地解决优化问题。在信息技术发展的同时，工程、生物信息学、运筹学和地球物理学等多个领域出现了大量的优化问题。不幸的是，大多数优化问题被归类为 NP-hard 问题，除非 NP 等于 P，否则无法在多项式时间区域中求解。因此，只能使用精确的数学方法处理小规模的实例。研究人员没有放弃，而是认为使用可能的解决方法（近似方法），可以在合理的时间内找到足够好的解决方案，这些方法可以分为启发式和元启发式。两者之间的显著区别在于，启发式算法比元启发式算法更依赖于问题。换句话说，启发式方法可以有效地应用于特定问题，同时不足以应对其他问题。另一方面，元启发式似乎是一个通用的算法框架或黑盒优化器，几乎可以应用于所有优化问题。元启发式算法非常(繁荣)，有许多种算法，基于现实世界启发（例如粒子群、遗传、模拟退火等），另外还有一些非现实世界启发（例如禁忌搜索、可变邻域搜索等）\cite{abdel-bassetChapter10Metaheuristic2018}。尽管元启发式算法在解决给定问题方面很繁荣，但它不能解决所有优化问题，并且所有元启发式算法的平均性能相同（无免费午餐定理 （NFL） ）。这是开发大量元启发式算法以适应各种问题类型（连续、离散、无约束、多目标等）的动力。

(离散化方案)

\cite{guoZShapedTransferFunctions2020}本研究提出了一种新型的Z形概率传递函数，以针对传统二进制粒子群优化（BPSO）算法容易陷入局部最优的问题。该传递函数能够将连续搜索空间高效映射到二进制空间，并在粒子位置更新过程中实现0与1之间的快速切换。通过在九个典型基准函数上的模拟实验，与现有的V形和S形传递函数相比，所提出的方法在收敛速度和优化精度上均获得了显著提升。该研究为改进BPSO算法在离散优化问题中的性能提供了一种行之有效的新思路。

(任务排序方案)\cite{sahmanDiscreteArtificialAlgae2022a}本研究针对NP难度的作业车间调度问题（JSSP）提出了一种离散化的人工藻类算法（AAA）变体，以解决高维问题中精确方法不适用的问题。论文中将三种编码方案——随机键（RK）、最小位置值（SPV）以及排名超值（ROV）编码——与人工藻类算法相结合，并首次对这三种编码方案在JSSP求解中的性能进行了比较。实验涉及48个规模从36到300维的JSSP实例，通过将三种编码方案与八种先进算法组合形成24种不同的求解策略进行求解比较。研究结果表明，在众多方法中，将SPV编码方案与AAA算法结合能够获得最优的完工时间（makespan）性能。这一工作不仅拓展了人工藻类算法在离散优化问题中的应用，同时也为处理高维作业车间调度问题提供了一种有效的求解策略。

另外，还可以通过离散化将原有解连续解空间的元启发式算法映射到离散空间，元启发式离散化。各种优化问题无法通过连续元启发式处理。因此，许多研究人员开发了几种离散化方法来适应二进制和整数值组合问题，例如旅行推销员问题、设施位置问题、Makespan 调度问题和背包问题等。
主要的离散化方法有：
(1)Sigmoid 函数 （SF） 是一种流行的离散化方法，它使用以下公式将连续搜索区域转换为二进制搜索区域（这个可以解决通用的离散化问题）。示例：二元粒子群优化 （BPSO） [136]、离散萤火虫 [137]、二元猫群优化 （BCSO） 算法 [138]、二元黑洞算法 [139]、二元花授粉算法 （BFPA） [140] 等。
(2)随机键 （RK） 使用随机数向量，然后为每个向量元素分配权重（按升序）（这个是解决任务重排序的方法）。这些权重用于生成一个排列作为解决方案。即可以转换为.示例：随机键遗传算法 [141]、改进的洗牌青蛙跳算法 [142]、随机键金球算法 [143]、随机键布谷鸟搜索 [144] 等。
(3)最小位置值 （SPV） 主要用于任务调度问题（这个是特化解决任务与资源之间联系的离散方法）。首先，将位置向量转换为排列.然后，作顺序。示例：PSO [145]、震动优化算法 （SOA） [146]、离散萤火虫算法 [147]、模因引力搜索算法 （MGSA） [148] 等。

适合双目标的优化算法：传统的单目标元启发式方法对于具有多个冲突目标的广泛优化问题变得不够用。因此，提出了多目标优化的需求。多目标优化可以在一组备选方案之间重新结合，而不是受一组约束条件的单目标元启发式“帕累托前”的单一/最佳解决方案。
非支配排序遗传算法 （NSGA-II）
按照解决问题的分类，本文应选择更适合离散、有约束、双目标的元启发式算法。其中离散的元启发式算法有代表性的包括：进化算法 （EA） 在细胞水平上模拟进化的生物进程，采用选择、交叉、突变和繁殖运算符来生成越来越好的候选解决方案（染色体）。对于进化计算,遗传算法 [18] 。GA 通过定义以下运算符来模拟染色体生物进化过程：选择、交叉和突变。染色体（见图 10.4）作为给定问题的候选解决方案处理，并根据它们的适合度进行评估。选择亲本进行育种是产生新解决方案的一个有影响力的过程。有不同的选择模式，例如轮盘赌轮盘选择 （RWS）、锦标赛选择 （TOS）、线性排名选择 （LRS） 和截断选择 （TRS） 等。

目前常见的比如NSGA算法由于采用距离衡量解多样性在高维空间中无法工作，因此最近研究正在关注哪个方向，但是实际中寻找那么多冲突的目标不现实，而NSGAII在三目标优化问题中是重要方法
（然后我们介绍NSGA的重要技术交叉、变异、拥挤距离以及非支配排序）
（其中重点介绍编码交叉和变异，而非支配排序不是重点）
变异算子被认为是 NSGA-II 中的主要搜索算子，特殊的遗传算子对于有效处理不同的多目标问题可能很重要。
交叉算子为GA算法提供了更好的收敛性，NSGA-II 结合本地搜索方法最近也进行了研究。这些改进的 NSGA-II 版本能够为最终的 Pareto 解决方案提供更好的收敛速度和准确性。
3.2.2. Crossover and mutation operations
In each evolutionary process, two different individuals, denoted as parent_one and parent_two, are selected from the current population for a crossover. Before the crossover is conducted on each binary bit, a random number, rand, between 0 and 1 is generated. The crossover probability is denoted as P(cross). If rand ≤ P(cross),a crossover is applied; otherwise, we do nothing. Because binary coding was used in the initialization of the population and the individuals, here, we use a Cycle Crossover (CX) as the crossover function [22]. Fig. 3 shows an example of using a cycle crossover. We give the binary-coded chromosome of two individuals parent_one and parent_two, and assume that a crossover takes place at the third, fourth and sixth genes. That is, the third, fourth, and sixth genes are swapped. In this way, two new individuals from different chromosomes can be produced. It can be seen that through the crossover operation, the “neighbours” of the individual can be searched. Because there are many individuals scattered around the feasible area, the crossover can be used to locally search for solutions in multiple feasible areas.
Fig. 3
Download: Download high-res image (172KB)
Download: Download full-size image
Fig. 3. An example of a using cycle crossover, in which two binary coding chromosome individuals parent_one and parent_two exchange their third, fourth, and sixth genes to generate two offspring individuals with new chromosomes, offspring_one and offspring_two.

The crossover operator can effectively conduct a local search, whereas the mutation operator can strengthen the global search ability of the algorithm. Through the mutation operator, new genes that are not found in the two parents can be generated. Similar to the crossover operator, a random number is still generated before the mutation operator is executed to determine whether the binary bit is mutated. The mutation operator under binary coding aims to inverse the mutated bits. As shown in Fig. 4, supposing the first bit of offspring_one is mutated. The chromosome of offspring_one becomes “000101″. Through the mutation operator, offspring_one shows a new chromosome that cannot be obtained by its parent through the crossover operator. Therefore, this means that the mutation operator can effectively jump out of the local optimal solution and can effectively enhance the global search ability.

3,4 拥挤距离
在 NSGA-II 中，帕累托前线的多样性维持是一个关键因素。最初的 NSGA-II 使用拥挤距离来去除过多的非支配个体，当它们的数量超过种群规模时。在移除过程中，拥挤距离值较低的个体优先于拥挤距离值较高的个体。在 Sun 和 Shen （2018） 的一项研究中，NSGA-II 采用了一种基于归一化拥挤距离的杂交鼓励机制来评估种群中基因之间的差异

（NSGA）改进\cite{mousaviDirectedSearchNew2023}本研究针对物联网任务调度中延迟敏感性和能耗问题，构造了一个受约束的双目标优化模型，旨在同时最小化服务器能耗和整体响应时延。为了解决这一问题，论文在经典NSGA-II算法中引入了一个新的重组算子，从而提出了一种定向非支配排序遗传算法（D-NSGA-II）。该新算子能够调节种群的选择压力，有效平衡算法在全局探索与局部开发之间的能力。实验结果表明，D-NSGA-II在多个指标上均超越了传统的元启发式算法，并能确保所有任务请求在截止时间前得到响应，从而为云-雾计算架构下的物联网任务调度提供了更高质量的解决方案。




(约束处理方案)

\cite{lagarosConstraintHandlingTechniques2023}本研究工作聚焦于针对元启发式算法在求解受约束优化问题时所需的约束处理技术（CHTs）的系统性回顾，并在此基础上提出了八种新变体。新变体在选择种群个体时，除了考虑目标函数值外，还综合考量了约束违背的程度与数量，从而在保证解的可行性的同时，更好地引导搜索过程。为验证所提策略，本研究利用了基于啤酒甲虫算法的元启发式优化方法，对20个单目标基准问题进行了评估，并与文献中四种知名的约束处理技术进行了对比。实验结果表明，新提出的变体在精度、有效性以及适用性方面均表现出显著优势，凸显了其在处理受约束优化问题时的竞争力。此外，完整的代码已在GitHub平台上公开，便于后续研究者的验证与扩展。

\cite{chootinanConstraintHandlingGenetic2006}本工作针对遗传算法在求解受约束优化问题时遇到的约束处理难题，提出了一种基于梯度信息的修复方法。具体而言，该方法利用约束集中的梯度信息对违反约束的不可行解进行系统性的修复，并将此修复过程作为遗传算法中的一项特殊操作符嵌入其中。经过在11个基准问题上的实验验证，该方法在求解性能上与文献中现有的同态映射方法、随机排序方法以及自适应适应度方法相比，展现出具有竞争力的效果甚至更为优越。


元启发式算法处理约束的方法：This section provides a comprehensive review on the most widely employed and efficient existing CHTs for MOAs, classified into six categories: (i) penalty-based CHTs; (ii) CHTs based on separation of objective and constraints; (iii) combination of CHTs; (iv) repair-algorithm-based CHTs; (v) boundary-based CHTs; and (vi) other CHTs. Table 1 provides a summary of all reviewed CHTs, along with the MOA employed in the respective work and the corresponding literature reference number.

\begin{figure}
    \caption{遗传算法}
    \includegraphics{img/3-s2.0-B9780128133149000104-gr004.jpg}
\end{figure}

（元启发式算法整体描述）\cite{peresCombinatorialOptimizationProblems2021}
本文系统回顾了近年来元启发式算法在求解复杂组合优化问题方面的应用进展与现状，指出当前研究中普遍存在过于关注新算法开发而忽视对已有知识整合与标准化过程的不足。作者从理论和实践两方面分析了组合优化问题以及元启发式算法在分类、设计与开发过程中遇到的关键挑战，并提出了一种形式化的框架和标准化方法，用于对组合优化问题和元启发式算法进行统一分类、设计和编码。通过这种标准化方案，期望提升元启发式方法的成熟度和复用性，使其在解决实际问题时能够像其他机器学习算法那样高效、可靠。

(NSGA)\cite{debFastElitistMultiobjective2002}本文提出了NSGA-II，一种基于非支配排序的多目标遗传算法，旨在克服传统多目标进化算法存在的三个主要问题：高计算复杂度（原方法复杂度与目标数量和种群规模有关）、缺乏精英保留机制以及对共享参数的依赖。为此，作者设计了一种快速非支配排序方法，其计算复杂度大大降低；并采用了一种通过合并父代与子代种群再筛选出具有较优适应度与扩散性的个体构造交配池的选择算子，从而实现精英保留。此外，还通过对支配关系定义的修改，使该算法在求解受约束的多目标问题时表现出更高的效率。实验结果表明，与现有的精英型多目标优化算法相比，NSGA-II在搜索得到广泛分布且逼近真实Pareto前沿的解集方面具有明显优势，既适用于无约束问题，也能高效处理受约束问题。

（元启发式算法整体描述）\cite{peresCombinatorialOptimizationProblems2021}
本文系统回顾了近年来元启发式算法在求解复杂组合优化问题方面的应用进展与现状，指出当前研究中普遍存在过于关注新算法开发而忽视对已有知识整合与标准化过程的不足。作者从理论和实践两方面分析了组合优化问题以及元启发式算法在分类、设计与开发过程中遇到的关键挑战，并提出了一种形式化的框架和标准化方法，用于对组合优化问题和元启发式算法进行统一分类、设计和编码。通过这种标准化方案，期望提升元启发式方法的成熟度和复用性，使其在解决实际问题时能够像其他机器学习算法那样高效、可靠。

(离散化方案)

\cite{guoZShapedTransferFunctions2020}本研究提出了一种新型的Z形概率传递函数，以针对传统二进制粒子群优化（BPSO）算法容易陷入局部最优的问题。该传递函数能够将连续搜索空间高效映射到二进制空间，并在粒子位置更新过程中实现0与1之间的快速切换。通过在九个典型基准函数上的模拟实验，与现有的V形和S形传递函数相比，所提出的方法在收敛速度和优化精度上均获得了显著提升。该研究为改进BPSO算法在离散优化问题中的性能提供了一种行之有效的新思路。

(任务排序方案)\cite{sahmanDiscreteArtificialAlgae2022a}本研究针对NP难度的作业车间调度问题（JSSP）提出了一种离散化的人工藻类算法（AAA）变体，以解决高维问题中精确方法不适用的问题。论文中将三种编码方案——随机键（RK）、最小位置值（SPV）以及排名超值（ROV）编码——与人工藻类算法相结合，并首次对这三种编码方案在JSSP求解中的性能进行了比较。实验涉及48个规模从36到300维的JSSP实例，通过将三种编码方案与八种先进算法组合形成24种不同的求解策略进行求解比较。研究结果表明，在众多方法中，将SPV编码方案与AAA算法结合能够获得最优的完工时间（makespan）性能。这一工作不仅拓展了人工藻类算法在离散优化问题中的应用，同时也为处理高维作业车间调度问题提供了一种有效的求解策略。

另外，还可以通过离散化将原有解连续解空间的元启发式算法映射到离散空间，元启发式离散化。各种优化问题无法通过连续元启发式处理。因此，许多研究人员开发了几种离散化方法来适应二进制和整数值组合问题，例如旅行推销员问题、设施位置问题、Makespan 调度问题和背包问题等。
主要的离散化方法有：
(1)Sigmoid 函数 （SF） 是一种流行的离散化方法，它使用以下公式将连续搜索区域转换为二进制搜索区域（这个可以解决通用的离散化问题）。示例：二元粒子群优化 （BPSO） [136]、离散萤火虫 [137]、二元猫群优化 （BCSO） 算法 [138]、二元黑洞算法 [139]、二元花授粉算法 （BFPA） [140] 等。
(2)随机键 （RK） 使用随机数向量，然后为每个向量元素分配权重（按升序）（这个是解决任务重排序的方法）。这些权重用于生成一个排列作为解决方案。即可以转换为.示例：随机键遗传算法 [141]、改进的洗牌青蛙跳算法 [142]、随机键金球算法 [143]、随机键布谷鸟搜索 [144] 等。
(3)最小位置值 （SPV） 主要用于任务调度问题（这个是特化解决任务与资源之间联系的离散方法）。首先，将位置向量转换为排列.然后，作顺序。示例：PSO [145]、震动优化算法 （SOA） [146]、离散萤火虫算法 [147]、模因引力搜索算法 （MGSA） [148] 等。

(约束处理方案)

\cite{lagarosConstraintHandlingTechniques2023}本研究工作聚焦于针对元启发式算法在求解受约束优化问题时所需的约束处理技术（CHTs）的系统性回顾，并在此基础上提出了八种新变体。新变体在选择种群个体时，除了考虑目标函数值外，还综合考量了约束违背的程度与数量，从而在保证解的可行性的同时，更好地引导搜索过程。为验证所提策略，本研究利用了基于啤酒甲虫算法的元启发式优化方法，对20个单目标基准问题进行了评估，并与文献中四种知名的约束处理技术进行了对比。实验结果表明，新提出的变体在精度、有效性以及适用性方面均表现出显著优势，凸显了其在处理受约束优化问题时的竞争力。此外，完整的代码已在GitHub平台上公开，便于后续研究者的验证与扩展。

\cite{chootinanConstraintHandlingGenetic2006}本工作针对遗传算法在求解受约束优化问题时遇到的约束处理难题，提出了一种基于梯度信息的修复方法。具体而言，该方法利用约束集中的梯度信息对违反约束的不可行解进行系统性的修复，并将此修复过程作为遗传算法中的一项特殊操作符嵌入其中。经过在11个基准问题上的实验验证，该方法在求解性能上与文献中现有的同态映射方法、随机排序方法以及自适应适应度方法相比，展现出具有竞争力的效果甚至更为优越。

元启发式算法处理约束的方法：This section provides a comprehensive review on the most widely employed and efficient existing CHTs for MOAs, classified into six categories: (i) penalty-based CHTs; (ii) CHTs based on separation of objective and constraints; (iii) combination of CHTs; (iv) repair-algorithm-based CHTs; (v) boundary-based CHTs; and (vi) other CHTs. Table 1 provides a summary of all reviewed CHTs, along with the MOA employed in the respective work and the corresponding literature reference number.

\section{启发式调度算法}

（调度算法综述，大概，这逼人怎么叫可汗啊）\cite{khanReviewTaskScheduling2023}本文针对云-雾计算融合环境下的任务调度研究进展进行系统性综述。针对5G与物联网应用激增引发的低时延需求与资源异构性挑战，建立多维度的调度技术分类体系：从策略设计维度将现有方法归纳为启发式、元启发式与混合架构三大范式；从任务特征维度区分独立任务、任务包与工作流场景；从目标优化维度梳理出20类调度指标，揭示多目标协同优化成为主流研究趋势。研究发现，当前研究普遍采用动态非抢占式调度机制，在评估方法上呈现仿真主导、真实实验匮乏的特征。研究进一步指出，现有算法在雾节点资源动态性管理、跨层调度决策时延抖动控制等方面仍存在理论空白，后续研究应着力突破边缘设备移动性建模、服务质量与能源效率的帕累托前沿优化等关键瓶颈，推动面向云-雾-端协同架构的智能自适应调度理论体系构建。

（经典HEFT算法，后文大概会想办法骂一骂这个办法）\cite{topcuogluPerformanceeffectiveLowcomplexityTask2002}当前异构计算任务调度研究多聚焦同构处理器场景，而针对异构环境的高效算法普遍面临调度质量与时间开销难以均衡的挑战。本文提出基于有向无环图（DAG）的异构最早完成时间算法（HEFT）及关键路径处理器绑定算法（CPOP）：前者通过向上秩（Upward Rank）动态确定任务优先级，采用插入式策略将任务分配至最早空闲的处理器；后者则融合上下行秩识别关键路径，并优先将关键任务调度至最小化全局执行时间的处理器。为客观评估性能，设计参数化DAG生成器构建异构任务集，结合真实应用图谱开展对比实验。

TPDS的，留着吧\cite{chenSchedulingWorkflowsSecuritySensitive2017}本文针对云环境下具有安全敏感中间数据的工作流调度优化问题展开研究。针对现有方法普遍忽视中间数据加密时延对任务启动时间的累积影响、未有效挖掘任务间数据依赖关系所引发的资源空闲时段以降低加密开销等缺陷，提出基于选择性任务复制的安全感知调度框架SOLID。具体贡献包括：(1) 建立任务前置复制与中间数据加密时延的关联模型，理论证明利用空闲时段选择性复制前置任务可规避数据传输与加密对后续任务启动时间的双重阻滞效应；(2) 提出任务最晚完成时间的形式化定义，并基于该时间窗设计面向货币成本优化的廉价资源分配策略，确保在不延长工作流总体完成时间的前提下降低资源开销；(3) 开发两阶段协同调度机制，通过任务复制与加密时延的动态松弛管理实现安全约束下工作流完工时间与资源成本的联合优化。研究特别强调任务复制策略与加密操作的时空调度协同，有效缓解了传统方法中安全增强措施与调度性能间的固有矛盾。

（TSS，之前有人拿他做对比）\cite{wangSecurityawareTaskScheduling2021a}本文针对异构混合云环境下安全敏感型任务的多目标调度优化问题展开研究。针对传统调度方法难以在任务截止期限约束与差异化安全需求之间实现资源成本与任务完成率的有效权衡，提出面向安全感知与截止时间约束的任务调度方法TSS。具体贡献包括：(1) 建立基于双目标二进制非线性规划（BOBNP）的任务调度模型，量化异构资源安全等级、数据传输开销与任务执行成本间的耦合关系；(2) 设计两阶段启发式调度策略，通过公共资源成本敏感型排序机制优先分配高性价比资源，并结合本地集群最大公共成本任务回撤策略降低全局资源开销；(3) 提出基于松弛时间窗口的动态调度优化算法，在节点级调度中融合最晚完成时间优先（LSTF）与最早截止期优先（EDF）策略，提升任务完成率。研究特别关注安全增强机制引入的计算-通信开销对调度可行域的压缩效应，通过安全等级与资源类型的动态匹配优化，缓解了混合云场景下安全约束与弹性扩展能力的固有冲突。实验验证表明，所提方法在非紧迫型截止期场景下展现出更优的资源效率与任务接纳率。

(这个是X雷那人毕业论文的英文，中文英文可以引用两遍，挺有意思的，看情况处理)\cite{leiPrivacySecurityawareWorkflow2022}本文针对混合云环境下隐私敏感型工作流的多约束调度优化问题展开研究。针对传统方法在跨云数据传输安全性与隐私保护机制不足、截止期限约束下资源成本优化效率低等缺陷，提出融合多级隐私安全模型的双阶段调度框架。具体贡献包括：(1) 构建基于混合加密技术的三级数据隐私安全模型，通过数据分类加密与跨云传输通道的动态适配机制，实现敏感任务与数据的细粒度安全防护；(2) 设计基于列表调度的启发式算法PSLS，采用截止期限分层分配策略与最小成本资源匹配机制，在满足隐私约束前提下优化全局部署成本；(3) 提出基于模拟退火的改进型算法PSSA，通过任务序列置换与局部优化迭代提升调度方案质量。研究特别关注隐私约束引发的可行解空间碎片化问题，在PSLS中引入任务优先级逆向传播机制，增强调度器对多约束耦合关系的处理能力。实验表明，所提方法在成本优化效率与多约束满足率方面较现有方案具有显著优势，其中PSSA算法通过引入元启发式搜索策略，在可接受的时间开销内进一步提升了调度方案的经济性。

(师兄的TLBO论文，拉出来溜溜)（没找到文献）本文针对移动边缘计算环境下任务调度效率优化问题展开研究。针对传统边缘-用户垂直协作的架构在热点区域资源竞争激烈、异构服务器负载不均衡等局限性，创新性地构建边缘-边缘水平协同的任务调度框架。具体贡献包括：(1) 建立基于软件定义网络的多层协作模型，融合垂直设备-边缘与水平边缘-边缘协作机制，通过任务部分卸载与跨服务器资源调配实现计算负载的动态均衡；(2) 提出联合优化问题分解方法，将复杂调度问题解耦为资源分配、关联决策与卸载比例三个子问题，分别采用拉格朗日乘子法、Floyd最短路径算法与改进型教学优化算法进行高效求解；(3) 设计混合启发式优化策略，通过贪心初始化、遗传变异算子与精英保留策略的协同，增强算法在非均匀用户分布场景下的全局搜索能力。研究特别关注任务卸载比例与服务器拓扑的耦合关系，通过建立基于位置感知的通信-计算联合模型，实现了传输时延与计算时延的协同优化。理论分析表明，所提框架突破了传统调度算法在局部最优解陷阱中的局限，在保持多项式时间复杂度的前提下显著提升了边缘集群的资源聚合效益。


（我们简要介绍NSGA的历史I、II、III，以及其余的基于进化同类算法与群智能算法）最后带一嘴还有个超多目标优化（many objective），

NSGA-II 是 NSGA [131] 的改进版本，由 Deb 等人 [132] 首次提出，用于解决几个约束问题，例如五目标七约束非线性问题。这两个版本的区别在于 NSGA-II 更快，具有更好的排序算法，包括保留已经建立的帕累托最优免于删除的精英主义，使用显式的多样性保留机制，其复杂性最多为 
，而 NSGA 复杂度为
（其中 M 是目标数，N 是总体大小）。NSGA-II 将标准 GA（选择、交叉和突变）与非主导排序和新的适应度值“拥挤距离”相结合，该值被分配是为了测量围绕特定解决方案的解决方案的密度。

\section{隐私保护相关研究}

（以地理位置为中心）本文\cite{zhouPrivacyRegulationAware2019}针对地理分布式云数据中心中隐私法规约束的进程映射问题，提出了一种高效的多约束优化方法，综合考虑多级隐私法规、异构网络性能和容错需求。通过数学建模和启发式算法设计，优化了通信成本和部署性能，并在真实云平台和模拟环境中验证了方法的有效性，为隐私合规和性能优化提供了新思路。

(以数据为中心保护，使用Lyapunov调度数据)\cite{liSecurityPerformanceawareResource2020}当前移动边缘计算（MEC）领域的研究多聚焦于任务卸载与性能优化，却普遍忽视企业多媒体（如视频、音频、图文）在无线传输中的安全风险。针对此局限性，本文提出面向企业多媒体的安全与性能协同感知资源分配算法Spara。首先，设计包含计算/带宽联合分配机制的企业多媒体安全架构；其次，基于Lyapunov优化理论构建随机数据传输模型，以前后端双队列动态表征用户设备（UE）状态，在满足安全约束条件下将延迟与能耗最小化问题形式化为随机优化问题。理论证明Spara算法可实现[O(1/V), O(V)]能量-延迟权衡，仿真实验验证其较传统方法在端到端时延降低21.8\%、能耗节省17.3\%的同时，有效防御中间人攻击等安全威胁。该工作为MEC环境下安全敏感型多媒体应用的资源分配提供了新方法论。

（隐私保护综述，车轱辘屁话不少，要想找车轱辘话依据可以引用它）\cite{LiuShengLongMianxiangduofangshujuronghefenxideyinsijisuanjishuzongshu2024}本文针对泛在共享环境下多方数据融合场景中的隐私安全挑战，系统梳理了跨系统隐私计算技术体系的研究进展。针对传统隐私保护技术在跨域数据流转控制、全生命周期隐私防护等方面的局限性，围绕多方数据协同中的安全共享与受控传播需求，从隐私计算框架、共享控制机制与协同计算范式三个维度展开综述。具体而言，在多方隐私计算领域，系统梳理了全生命周期隐私保护、基于数据血缘的流转追踪、面向敏感数据的安全交换协议等技术路径；在共享控制机制方面，对比分析了本地化差分隐私、基于区块链的延伸控制以及动态脱敏策略；在协同计算范式层面，着重探讨了安全多方计算、联邦学习与可信执行环境等技术的融合创新。研究指出，现有基于密码学原语、联邦架构的解决方案在动态访问控制、细粒度权限管理等方面仍存在适应性瓶颈，亟需构建覆盖数据采集、传输、处理、销毁全流程的隐私计算框架。后续研究应着重解决跨域信任建立、计算-通信开销优化等关键问题，推动隐私计算理论模型与电力、金融等垂直领域的场景化应用深度结合。

(这篇论文我不太想引用，但它是实际落地的项目)\cite{ZhangMinYuYigouhunheyunhuanjingxiadaiyinsixingyueshudeSparkrenwutiaodu2023}本文针对异构混合云环境下Spark工作流调度的多约束优化问题展开研究。针对原生Spark调度器在混合云场景中存在的资源弹性适配不足、隐私安全机制缺失等局限性，提出两阶段协同调度框架。具体贡献包括：(1)构建基于阶段感知的子截止期划分机制(SBSAD)，通过时间参数初始化-收缩-松弛的三步动态调整策略，实现混合云资源配置与工作流拓扑结构的深度适配，优化资源租赁成本；(2)设计带隐私约束的调度算法(PSWSA)，创新性融合三种调度序列生成策略、私有云选择策略与空闲时段利用机制，在满足数据隐私需求的前提下构建多维优化空间；(3)提出改进型IFIFO调度策略，在保留FIFO框架优点的同时引入弹性资源抢占机制，有效平衡混合云场景下的计算密度与资源碎片化问题。研究特别关注隐私约束引发的可行解空间压缩效应，通过动态松弛机制与多重策略组合优化，突破了传统调度算法在安全性与经济性之间的权衡困境。实验验证表明，所提算法在截止期满足率与租赁成本控制方面较现有方案展现出显著优势。

(这篇论文跑大题了，但是可以让其他人长长见识)\cite{dengCheLianwangBianyuan2023}本文针对车联网边缘计算场景下的位置隐私保护难题展开研究。针对传统隐私保护方案未充分考虑边缘卸载模式引发的轨迹推断、多接入隐私叠加及长期行为分析等新型攻击范式，提出多维度协同的隐私增强型任务调度框架。具体贡献包括：(1) 构建基于互信息熵的轨迹隐私量化模型，设计马尔可夫链驱动的在线任务调度机制，实现迁移成本约束下隐私保护与感知时延的帕累托优化；(2) 建立多接入场景下的隐私损失叠加动态模型，提出基于隐马尔可夫链的蝙蝠算法调度策略，破解多目标约束下的隐私-能耗-时延多维度均衡难题；(3) 提出基于李雅普诺夫优化的长期先验隐私防护框架，通过隐私成本队列稳定性控制与马尔可夫近似算法的联合求解，有效抵御基于历史行为模式的持续推理攻击。研究特别关注边缘计算环境下时空维度隐私泄露的耦合效应，创新性地将隐私泄露建模从单点扩展至轨迹序列与长期行为模式，通过动态调度策略实现隐私保护强度与系统运行成本的协同优化。理论分析表明，所提方法在保证低时延服务供给的同时，可建立面向新型边缘计算攻击范式的多层级隐私防护体系。

\section{任务表示方法}

（经典这个老哥怎么哪都有它，线性工作流的较完善定义）\cite{stavrinidesMulticriteriaSchedulingLinear2021}本文针对动态线性工作流的分布式调度优化问题展开研究。针对传统调度方法在处理运行时任务结构动态调整（如任务增删）以及多目标协同优化（响应时间与公平性）方面的不足，提出动态结构感知的调度框架。具体贡献包括：(1) 建立基于线性工作流可扩展性的动态任务模型，通过运行时任务拓扑重构机制实现负载弹性适配；(2) 设计双维度评估指标，创新性地将作业公平性度量与系统吞吐效率进行联合优化；(3) 提出两种启发式调度策略，分别针对服务需求波动场景下的负载均衡与优先级动态调整问题。研究特别关注工作流结构动态性引发的资源预留冲突，通过滑动窗口机制实现任务增减事件与调度决策的时序解耦。理论分析表明，所提方法在异构分布式环境中展现出良好的适应性，其多目标权衡机制为后续动态工作流调度研究提供了新的范式参考。

(还是这个老哥，真寄吧能水)\cite{stavrinidesSchedulingLinearWorkflows2023}本研究提出了一种针对分布式系统中线性工作流作业的调度技术，其核心在于允许退出任务在特定条件下接受部分计算，并据此动态调整其执行方式。在方法设计中，作者考虑了在工作流中部分作业（可能为全部、部分或均不允许部分计算）的情况，并通过仿真实验探讨了不同系统负载和服务需求变化下，这种部分计算机制对整体系统性能的影响。实验结果显示，在保证平均结果精度基本不受显著影响的前提下，允许部分计算的退出任务能够显著减少工作流作业的平均响应时间，从而为分布式资源环境下的工作流调度提供了一种高效的解决方案。

DAG任务带执行组\cite{shiDAGSchedulingExecution2024}本文针对安全关键信息物理系统（如汽车电子、机器人等）中多核平台下实时任务调度与通信开销的权衡问题展开研究。针对应用复杂性导致的并行任务（建模为具有数据流与同步约束的偶发DAG任务模型）在多核平台上因跨核通信引发的延迟、拥塞与同步开销问题，提出基于执行组的DAG任务模型。该模型通过约束具有密集数据交互或共享数据访问的子任务组（execution group）必须调度至同一物理处理器，利用高效的核内通信替代高开销的跨核通信。具体贡献包括：(1) 提出支持执行组约束的DAG任务扩展模型，从理论上推导其最坏响应时间分析方法；(2) 设计面向该模型的优化调度策略，并通过对比实验验证其性能与现有无约束方法的竞争力；(3) 探讨多任务系统下的实现机制与扩展方法。研究特别关注子任务组内资源局部性约束对调度灵活性的影响，通过组内协同调度与全局优先级优化，在降低通信开销的同时维持系统可调度性。

